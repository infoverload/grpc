// Code generated by protoc-gen-go. DO NOT EDIT.
// source: salute/salute.proto

/*
Package salute is a generated protocol buffer package.

Define that the generated files will have the package salute

It is generated from these files:
	salute/salute.proto

It has these top-level messages:
	SaluteRequest
	SaluteResponse
*/
package salute

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// define enumerator response type to support both html and text response types
type ResponseType int32

const (
	ResponseType_html ResponseType = 0
	ResponseType_text ResponseType = 1
)

var ResponseType_name = map[int32]string{
	0: "html",
	1: "text",
}
var ResponseType_value = map[string]int32{
	"html": 0,
	"text": 1,
}

func (x ResponseType) String() string {
	return proto.EnumName(ResponseType_name, int32(x))
}
func (ResponseType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Define the SaluteRequest to contain the following fields in this order:
// response_type
// saluters (0 strings or more)
// salutee (string)
// video url (string)
// logo url (string)
// description (string)
// url (string)
// timestamp (research how to define a timestamp with proto 3)
type SaluteRequest struct {
	ResponseType ResponseType               `protobuf:"varint,1,opt,name=response_type,json=responseType,enum=salute.ResponseType" json:"response_type,omitempty"`
	Saluters     []string                   `protobuf:"bytes,2,rep,name=saluters" json:"saluters,omitempty"`
	Salutee      string                     `protobuf:"bytes,3,opt,name=salutee" json:"salutee,omitempty"`
	VideoUrl     string                     `protobuf:"bytes,4,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	LogoUrl      string                     `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	Description  string                     `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Url          string                     `protobuf:"bytes,7,opt,name=url" json:"url,omitempty"`
	Timestamp    *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *SaluteRequest) Reset()                    { *m = SaluteRequest{} }
func (m *SaluteRequest) String() string            { return proto.CompactTextString(m) }
func (*SaluteRequest) ProtoMessage()               {}
func (*SaluteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SaluteRequest) GetResponseType() ResponseType {
	if m != nil {
		return m.ResponseType
	}
	return ResponseType_html
}

func (m *SaluteRequest) GetSaluters() []string {
	if m != nil {
		return m.Saluters
	}
	return nil
}

func (m *SaluteRequest) GetSalutee() string {
	if m != nil {
		return m.Salutee
	}
	return ""
}

func (m *SaluteRequest) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *SaluteRequest) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *SaluteRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SaluteRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *SaluteRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type SaluteResponse struct {
	ResponseType ResponseType `protobuf:"varint,1,opt,name=response_type,json=responseType,enum=salute.ResponseType" json:"response_type,omitempty"`
	Body         string       `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
}

func (m *SaluteResponse) Reset()                    { *m = SaluteResponse{} }
func (m *SaluteResponse) String() string            { return proto.CompactTextString(m) }
func (*SaluteResponse) ProtoMessage()               {}
func (*SaluteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SaluteResponse) GetResponseType() ResponseType {
	if m != nil {
		return m.ResponseType
	}
	return ResponseType_html
}

func (m *SaluteResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*SaluteRequest)(nil), "salute.SaluteRequest")
	proto.RegisterType((*SaluteResponse)(nil), "salute.SaluteResponse")
	proto.RegisterEnum("salute.ResponseType", ResponseType_name, ResponseType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Saluter service

type SaluterClient interface {
	Salute(ctx context.Context, in *SaluteRequest, opts ...grpc.CallOption) (*SaluteResponse, error)
}

type saluterClient struct {
	cc *grpc.ClientConn
}

func NewSaluterClient(cc *grpc.ClientConn) SaluterClient {
	return &saluterClient{cc}
}

func (c *saluterClient) Salute(ctx context.Context, in *SaluteRequest, opts ...grpc.CallOption) (*SaluteResponse, error) {
	out := new(SaluteResponse)
	err := grpc.Invoke(ctx, "/salute.Saluter/Salute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Saluter service

type SaluterServer interface {
	Salute(context.Context, *SaluteRequest) (*SaluteResponse, error)
}

func RegisterSaluterServer(s *grpc.Server, srv SaluterServer) {
	s.RegisterService(&_Saluter_serviceDesc, srv)
}

func _Saluter_Salute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaluteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaluterServer).Salute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salute.Saluter/Salute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaluterServer).Salute(ctx, req.(*SaluteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Saluter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "salute.Saluter",
	HandlerType: (*SaluterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Salute",
			Handler:    _Saluter_Salute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "salute/salute.proto",
}

func init() { proto.RegisterFile("salute/salute.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x51, 0xcd, 0x4e, 0xc2, 0x40,
	0x10, 0xa6, 0x80, 0xa5, 0x1d, 0x7e, 0x42, 0xc6, 0x9f, 0xac, 0xf5, 0x60, 0xd3, 0x53, 0xe3, 0xa1,
	0x24, 0x78, 0x91, 0xbb, 0x4f, 0x50, 0xf1, 0x4c, 0x40, 0x46, 0x6c, 0x52, 0xd8, 0x75, 0x77, 0x6b,
	0xe4, 0x85, 0x7c, 0x4e, 0xd3, 0x1d, 0x8a, 0xe8, 0xd5, 0x53, 0xbf, 0xbf, 0xe9, 0xee, 0x7c, 0x0b,
	0xe7, 0x66, 0x59, 0x56, 0x96, 0x26, 0xfc, 0xc9, 0x94, 0x96, 0x56, 0xa2, 0xcf, 0x2c, 0xba, 0xdd,
	0x48, 0xb9, 0x29, 0x69, 0xe2, 0xd4, 0x55, 0xf5, 0x3a, 0xb1, 0xc5, 0x96, 0x8c, 0x5d, 0x6e, 0x15,
	0x07, 0x93, 0xaf, 0x36, 0x0c, 0x9f, 0x5c, 0x36, 0xa7, 0xf7, 0x8a, 0x8c, 0xc5, 0x19, 0x0c, 0x35,
	0x19, 0x25, 0x77, 0x86, 0x16, 0x76, 0xaf, 0x48, 0x78, 0xb1, 0x97, 0x8e, 0xa6, 0x17, 0xd9, 0xe1,
	0x80, 0xfc, 0x60, 0xce, 0xf7, 0x8a, 0xf2, 0x81, 0x3e, 0x61, 0x18, 0x41, 0xc0, 0x21, 0x6d, 0x44,
	0x3b, 0xee, 0xa4, 0x61, 0x7e, 0xe4, 0x28, 0xa0, 0xc7, 0x98, 0x44, 0x27, 0xf6, 0xd2, 0x30, 0x6f,
	0x28, 0xde, 0x40, 0xf8, 0x51, 0xac, 0x49, 0x2e, 0x2a, 0x5d, 0x8a, 0xae, 0xf3, 0x02, 0x27, 0x3c,
	0xeb, 0x12, 0xaf, 0x21, 0x28, 0xe5, 0x86, 0xbd, 0x33, 0x9e, 0xab, 0x79, 0x6d, 0xc5, 0xd0, 0x5f,
	0x93, 0x79, 0xd1, 0x85, 0xb2, 0x85, 0xdc, 0x09, 0xdf, 0xb9, 0xa7, 0x12, 0x8e, 0xa1, 0x53, 0xcf,
	0xf5, 0x9c, 0x53, 0x43, 0x7c, 0x80, 0xf0, 0xd8, 0x80, 0x08, 0x62, 0x2f, 0xed, 0x4f, 0xa3, 0x8c,
	0x3b, 0xca, 0x9a, 0x8e, 0xb2, 0x79, 0x93, 0xc8, 0x7f, 0xc2, 0xc9, 0x02, 0x46, 0x4d, 0x4f, 0xbc,
	0xf1, 0x7f, 0x8a, 0x42, 0xe8, 0xae, 0xe4, 0x7a, 0x2f, 0xda, 0xee, 0x66, 0x0e, 0xdf, 0x25, 0x30,
	0x38, 0x9d, 0xc0, 0x00, 0xba, 0x6f, 0x76, 0x5b, 0x8e, 0x5b, 0x35, 0xb2, 0xf4, 0x69, 0xc7, 0xde,
	0xf4, 0x11, 0x7a, 0x7c, 0x09, 0x8d, 0x33, 0xf0, 0x19, 0xe2, 0x65, 0x73, 0xe0, 0xaf, 0x77, 0x8c,
	0xae, 0xfe, 0xca, 0xfc, 0xef, 0xa4, 0xb5, 0xf2, 0xdd, 0xa6, 0xf7, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x37, 0x93, 0xc3, 0xc8, 0x3a, 0x02, 0x00, 0x00,
}
